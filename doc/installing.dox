/*
 * Copyright 2011-2012 Tanjeff-Nicolai Moos <tanjeff@cccmz.de>
 *
 * This file is part of the agentXcpp library.
 *
 * AgentXcpp is free software: you can redistribute it and/or modify
 * it under the terms of the AgentXcpp library license, version 1, which 
 * consists of the GNU General Public License and some additional 
 * permissions.
 *
 * AgentXcpp is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * See the AgentXcpp library license in the LICENSE file of this package 
 * for more details.
 */

/*! 

\page installation Building and Installing AgentXcpp

It would be nice if if there were a package for your operating system which you 
could easily install. Probably there is not, so you have to compile agentXcpp 
yourself. Luckily, this is not too hard. Here is how to do it.



\section installation_prerequisites Prerequisites

The following software is needed to build agentXcpp. Simply use the versions 
which are easily available for your system.
- Standard build environment (compiler, linker, etc.)
- The QT4 library (devel package, e.g.  libqt4-dev on linux systems)
- Doxygen, to build the documentation
- The dot tool from the graphviz package, which is used by doxygen to generate 
  diagrams
- SCons, to control the build process



\section installation_installingSystem Building and installing agentXcpp

Building and installing agentXcpp is a one-step operation: one command builds 
the library and installs all files.  The place where they are installed can 
freely be chosen.

To install agentXcpp right into a linux system, the following command should 
work:

\verbatim
# Install agentXcpp into a linux system
sudo scons install --prefix /usr
\endverbatim

\note
      - Using the <tt>sudo</tt> command may fail on some systems, because the 
        environment provided by <tt>sudo</tt> may be insufficient for scons,  
        or because \c sudo is not installed or not configured. In that case 
        login as root and execute the command without \c sudo, i.e.  
        '<tt>scons&nbsp;install&nbsp;-</tt><tt>-prefix&nbsp;/usr</tt>'.
      - The build process can be accelerated by giving the <tt>-j</tt> 
        parameter to SCons, e.g.  
        '</tt>sudo&nbsp;scons&nbsp;install&nbsp;-j&nbsp;3&nbsp;-</tt><tt>-prefix&nbsp;/usr</tt>'.  
        As a rule of thumb, use <tt>number_of_cpus+1</tt>.


The shown command will install the headers into 
<tt>/usr/include/agentxcpp/</tt>, the shared library to <tt>/usr/lib/</tt> and 
the API documentation to <tt>/usr/share/doc/agentxcpp/</tt>. If that doesn't 
fit for your system, you can control the individual installation directories 
like so:

\verbatim
# To choose each directory separately:
scons install --libdir /usr/lib \
              --docdir /opt/agentxcpp/doc \
              --includedir /usr/include/agentxcpp \

# This will do the same:
scons install --prefix=/usr \
              --docdir=/opt/agentxcpp/doc
\endverbatim

The \c -<tt>-prefix</tt> switch is only used to deduce the default installation 
directories. If all three directories are specified on the command line, \c 
-<tt>-prefix</tt> does nothing. Package maintainers may omit the directory 
switches completely and simply call:

\verbatim
# For package maintainers: Install into ./install-root
scons install
\endverbatim

This installs agentXcpp into the directory <tt>./install-root</tt>, from where 
the files may picked up to build the package.

\section installation_cleaning Uninstalling agentXcpp

You can uninstall agentXcpp again with the following command:

\verbatim
sudo scons --clean install --prefix /usr
\endverbatim

The \c -<tt>-clean</tt> switch removes all files which <em>would be 
installed</em> without that switch. SCons does not remember which files were 
really installed before.  Therefore, you need to specify the same prefix (or 
libdir, docdir and includedir) which you used to install the files. You should 
also use the same agentXcpp version used during installation, since another 
version might install and uninstall other files.


*/
